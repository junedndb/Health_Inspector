@model LoginandRegisterMVC.Models.Clinic

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(("Create", "Clinics", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return updatemark()" })))
{
    //   @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Clinic</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ClinicName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ClinicName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ClinicName, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.DoctorName != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*                                 @Html.TextBoxFor(model => model.DoctorName, new { @Value = ViewBag.DoctorName })
                *@@*                                @Html.DropDownList("DoctorName", null, htmlAttributes: new { @class = "form-control" })
                *@
                @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.DoctorName, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*                                 @Html.TextBoxFor(model => model.DoctorName, new { @Value = ViewBag.DoctorName })
                *@@*                                @Html.DropDownList("DoctorName", null, htmlAttributes: new { @class = "form-control" })
                *@
                @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control", @Value = "Admin", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (ViewBag.DoctorId != null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*                @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control" } })
                *@
                @*                @Html.DropDownList("DoctorId", null, htmlAttributes: new { @class = "form-control" })
                *@                @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.DoctorId, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.DoctorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*                @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control" } })
                *@
                @*                @Html.DropDownList("DoctorId", null, htmlAttributes: new { @class = "form-control" })
                *@                @Html.EditorFor(model => model.DoctorId, new { htmlAttributes = new { @class = "form-control", @Value = 0, @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DoctorId, "", new { @class = "text-danger" })
            </div>
        </div>
    }




    <div class="form-group">
        @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Specialization, ViewBag.Speciality as SelectList, "--select--")
            @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Services, htmlAttributes: new { @class = "control-label col-md-2" })

        @{ List<LoginandRegisterMVC.Models.ClinicFacilities> mylist = ViewBag.Facility;
            foreach (var h in mylist)
            {
                <input type="checkbox" name="facility" value="@h.Service" /> @h.Service } }
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.ClinicTiming, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClinicTiming, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClinicTiming, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.AddressFLine, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AddressFLine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AddressFLine, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LocalityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.LocalityId, ViewBag.Locality as SelectList, "--select--")
            @Html.ValidationMessageFor(model => model.LocalityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index","Clinics",new { id = Model.DoctorId},null)
    </div>
*@




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



