@model LoginandRegisterMVC.Models.User

@{
    ViewBag.Title = "ForgotPassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    //   @Html.AntiForgeryToken()

<div class="form-horizontal container-fluid">
    <h2 class="text-center text-danger">Reset Password</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })<br />
    <div class="form-group">
        @Html.LabelFor(model => model.MailId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MailId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MailId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fque, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fque, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fque, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sque, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sque, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sque, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tque, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tque, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tque, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
    @*    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
    *@
        @Html.Label("New Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Role, new List<SelectListItem>
            {
                new SelectListItem{Text="Admin",Value="Admin"},
                new SelectListItem{Text="Patient",Value="Patient"},
                new SelectListItem{Text="Doctor",Value="Doctor"}
            }, "Select Role", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Reset" class="btn btn-success" onclick="myFunction()" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <p>@Html.ActionLink("SignUp", "Register")  <span style="padding-right:10px;padding-left:10px;"><b>OR</b></span>  @Html.ActionLink("Login", "Login")</p>
        </div>
    </div>
</div>
}

<script>
    function myFunction() {
        alert("Password Resetted Sucessfully !!");
    }
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
